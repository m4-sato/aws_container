# syntax=docker/dockerfile:1

# Stage 1: Build the layer contents
# Use the official AWS Lambda base image for Python 3.9
FROM public.ecr.aws/lambda/python:3.9 as builder

# Install pip just in case, and upgrade it
RUN pip install --upgrade pip

# Install Poetry
RUN pip install poetry

WORKDIR /var/task

# Copy only the dependency definition files
COPY pyproject.toml poetry.lock* ./

# Configure Poetry not to create virtual environments
RUN poetry config virtualenvs.create false

# Install dependencies using Poetry
# --no-dev の代わりに --only main を使用して、メインの依存関係のみをインストール
RUN poetry install --only main --no-interaction --no-ansi --no-root

# Create the target directory structure required by Lambda Layers
RUN mkdir -p /opt/python

# Copy installed packages from the site-packages directory to the target directory
RUN cp -r /var/lang/lib/python3.9/site-packages/. /opt/python/

# Optional: Clean up unnecessary files to reduce layer size
# RUN find /opt/python -type d -name '__pycache__' -exec rm -rf {} +
# RUN find /opt/python -type f -name '*.pyc' -delete

# Stage 2: Create the final layer artifact
FROM scratch
COPY --from=builder /opt/ /opt/